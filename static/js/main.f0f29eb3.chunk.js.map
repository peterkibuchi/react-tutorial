{"version":3,"sources":["Form.js","Table.js","App.js","index.js"],"names":["Form","initialState","name","job","state","handleChange","event","target","value","setState","submitForm","props","handleSubmit","this","htmlFor","type","id","onChange","onClick","Component","TableHeader","TableBody","rows","characterData","map","row","index","removeCharacter","Table","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"2OAoDeA,E,4MAhDXC,aAAe,CACXC,KAAM,GACNC,IAAK,I,EAETC,MAAS,EAAKH,a,EAEdI,aAAe,SAACC,GACZ,MAAsBA,EAAMC,OAArBL,EAAP,EAAOA,KAAMM,EAAb,EAAaA,MAEb,EAAKC,SAAL,eACKP,EAAOM,K,EAIhBE,WAAa,WACT,EAAKC,MAAMC,aAAa,EAAKR,OAC7B,EAAKK,SAAS,EAAKR,e,4CAGvB,WACI,MAAoBY,KAAKT,MAAlBF,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IAEb,OACI,iCACI,uBAAOW,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLb,KAAK,OACLc,GAAG,OACHR,MAAON,EACPe,SAAUJ,KAAKR,eAGnB,uBAAOS,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLb,KAAK,MACLc,GAAG,MACHR,MAAOL,EACPc,SAAUJ,KAAKR,eAGnB,uBAAOU,KAAK,SAASP,MAAM,SAASU,QAASL,KAAKH,oB,GA3C/CS,aCAbC,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,qCACA,8CAMVC,EAAY,SAACV,GACf,IAAMW,EAAOX,EAAMY,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIvB,OACT,6BAAKuB,EAAItB,MACT,6BACI,wBAAQe,QAAS,kBAAMP,EAAMgB,gBAAgBD,IAA7C,wBAJCA,MAUjB,OAAO,gCAAQJ,KAcJM,EAXD,SAACjB,GACX,IAAOY,EAAkCZ,EAAlCY,cAAeI,EAAmBhB,EAAnBgB,gBAEtB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWJ,cAAeA,EAAeI,gBAAiBA,QCGvDE,E,4MAlCXzB,MAAQ,CACJ0B,WAAY,I,EAGhBH,gBAAkB,SAACD,GACf,IAAOI,EAAc,EAAK1B,MAAnB0B,WAEP,EAAKrB,SAAS,CACVqB,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMP,Q,EAKzBd,aAAe,SAACoB,GACZ,EAAKvB,SAAS,CAACqB,WAAW,GAAD,mBAAM,EAAK1B,MAAM0B,YAAjB,CAA6BE,O,4CAG1D,WACI,IAAOF,EAAcjB,KAAKT,MAAnB0B,WAEP,OACI,sBAAKI,UAAU,YAAf,UACI,gDACA,oFACA,cAAC,EAAD,CAAOX,cAAeO,EAAYH,gBAAiBd,KAAKc,kBAExD,yCACA,cAAC,EAAD,CAAMf,aAAcC,KAAKD,sB,GA7BvBO,a,MCAlBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f0f29eb3.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\n\nclass Form extends Component {\n    initialState = {\n        name: \"\",\n        job: \"\",\n    };\n    state =  this.initialState;\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const {name, job} = this.state;\n\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange}\n                />\n\n                <label htmlFor=\"job\">Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange}\n                />\n\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        )\n    }\n}\n\nexport default Form;\n","import React, {Component} from 'react';\n\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        );\n    });\n\n    return <tbody>{rows}</tbody>\n}\n\nconst Table = (props) => {\n    const {characterData, removeCharacter} = props;\n\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    );\n}\n\nexport default Table;\n","import React, {Component} from 'react';\nimport Form from './Form';\nimport Table from './Table';\n\n\nclass App extends Component {\n    state = {\n        characters: [],\n    };\n\n    removeCharacter = (index) => {\n        const {characters} = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            })\n        })\n    }\n\n    handleSubmit = (character) => {\n        this.setState({characters: [...this.state.characters, character]});\n    }\n\n    render() {\n        const {characters} = this.state;\n\n        return (\n            <div className=\"container\">\n                <h1>React Tutorial</h1>\n                <p>Add a character with a name and a job to the table.</p>\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n\n                <h3>Add New</h3>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}